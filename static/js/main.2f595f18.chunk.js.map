{"version":3,"sources":["components/contactsForm/ContactsFormStyled.js","components/contactsForm/ContactsForm.js","components/contactsList/StyledContactList.js","components/contactsList/ContactsList.js","components/section/Section.js","components/filter/ContactFilterStyled.js","components/filter/ContactsFilter.js","components/Contacts.js","components/App.js","index.js"],"names":["ContactsLabel","styled","form","ContactsForm","state","id","uuid","name","number","filter","onHandleSubmit","e","preventDefault","props","addContact","checkDublicateName","setState","onHandleChange","target","value","onSubmit","this","type","onChange","pattern","title","required","Component","StyledContactList","div","ContactsList","contacts","onDeleteContact","className","map","contact","onClick","Section","children","style","StyledContactFilter","ContactsFilter","setFilter","Contacts","prevState","some","alert","getFilteredClients","toLowerCase","includes","toLocaleLowerCase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f595f18.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const ContactsLabel = styled.form`\n\n width:400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: flex-start;\n    border-color: black;\n    padding: 15px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\n    margin-top: 50px;\n margin-bottom: 50px;\n\n\n`","import React, { Component } from 'react';\nimport { ContactsLabel} from './ContactsFormStyled'\nimport { v4 as uuid } from 'uuid';\n\n\nimport PropTypes from 'prop-types';\nclass ContactsForm extends Component {\n    // static propTypes = {\n    //     handleAdd: PropTypes.func.isRequired\n    // };\n    state = {\n        id: uuid(),\n        // contacts: [],\n        name: \"\",\n        number: \"\",\n        filter: '',\n        \n    }\n    \n\n    onHandleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addContact(this.state)\n        this.props.checkDublicateName(this.state.name);\n        \n        this.setState({\n            // contacts: [],\n            name: \"\",\n            number:\"\",\n\n\n        })\n   \n    };\n    onHandleChange = (e) => {\n        const { name, value } = e.target\n        this.setState({ [name]: value }); //___v [name] prihodit name i price\n    }\n\n\n    render() {\n        return (\n            \n            <form onSubmit={this.onHandleSubmit}>\n\n                <ContactsLabel>\n                    Name\n                      <input\n                        type=\"text\"\n                        onChange={this.onHandleChange}\n                        value={this.state.name}\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                    />\n                </ContactsLabel>\n                <ContactsLabel>\n                    Number\n                      <input\n                        type=\"tel\"\n                        onChange={this.onHandleChange}\n                        value={this.state.number}\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                    />\n                </ContactsLabel>\n                <button type=\"submit\" >Add Contact</button>\n            </form>\n            \n               \n        );\n    }\n}\n\nContactsForm.propTypes = {\n    onHandleSubmit: PropTypes.func,\n    name: PropTypes.string,\n    number: PropTypes.string,\n}.isRequired;\n\nexport default ContactsForm;","import styled from 'styled-components'\n\nexport const StyledContactList = styled.div`\n\n    width:400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: flex-start;\n    border-color: black;\n    padding: 15px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\n    margin-top: 50px;\n\n`","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Contacts from '../Contacts';\nimport { StyledContactList } from './StyledContactList';\n\nconst ContactsList = ({contacts, onDeleteContact}) => {\n\n    return (\n        <StyledContactList>\n        <div className=\"card\">\n            \n            <ul className=\"contactItem\">\n                \n                {contacts.map(contact => (\n                    \n                    <li key= {contact.id } >\n                        <p>{contact.name}</p>\n                        <p>{contact.number}</p>\n                        <button type=\"button\" onClick={onDeleteContact} id={contact.id}>\n                            Delete</button>\n                    </li>\n                ))}\n            \n                \n            </ul>\n            </div>\n        </StyledContactList>\n    );\n}\n\nContactsList.propTypes = {\n    onDeleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    })),\n}\nexport default ContactsList;\n","import React from 'react'\n\nconst Section = ({title, children, style}) => {\n    return (\n        \n        <div className={style} >\n            <h2>{title}</h2>\n            {children}\n            \n        </div>\n    );\n}\n\nexport default Section;","import styled from 'styled-components'\n\nexport const StyledContactFilter = styled.div`\n width:400px;\n\n    justify-content: space-evenly;\n    align-items: flex-start;\n    border-color: black;\n    padding: 15px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\n    margin-top: 50px;\n    \n    input {\n    width: 60%;\n  padding: 12px 10px;\n margin-left: 10px;\n  display: inline-block;\n  border-radius: 4px;\n  box-sizing: border-box;\n  border: 1px solid #ccc8c8;\n  transition: .3s border-color;\n\n\n}\n    `","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { StyledContactFilter } from './ContactFilterStyled';\n\n\nconst ContactsFilter = ({ filter, setFilter }) => {\n    return (\n        <StyledContactFilter>\n        <label >Filter:\n            <input type=\"text\"\n                value={filter}\n                onChange={setFilter}\n            />\n            </label>\n        </StyledContactFilter>\n    );\n}\n\nContactsFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func,\n}.isRequired;\nexport default ContactsFilter;","import React, { Component } from 'react';\nimport ContactsForm from './contactsForm/ContactsForm';\nimport ContactsList from './contactsList/ContactsList';\nimport { v4 as uuid } from 'uuid';\nimport Section from './section/Section';\n\nimport ContactsFilter from './filter/ContactsFilter';\n\n\n\n\nclass Contacts extends Component {\n    state = {\n        filter: '',\n        name: '',\n        number: '',\n        contacts: [\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n        ],\n        \n    };\n\n    addContact = contact => {\n       \n        this.setState(prevState => {\n            return {\n                contacts: [...prevState.contacts, {...contact, id: uuid() }]\n            }\n        })\n   \n    }\n    \n    checkDublicateName = (name) => {\n    \n\n        const isDuplicate = this.state.contacts.some((contact) => contact.name === name);\n\n        if (isDuplicate) {\n            alert(`${name} is already existed! `);\n            return;\n        }\n\n    };\n\n\n    onDeleteContact = (e) => {\n        const { id } = e.target\n        this.setState({\n            contacts:this.state.contacts.filter(contact=>contact.id!==id)\n        })\n    }\n\n    setFilter = (e) => {\n        const { value } = e.target\n        this.setState({\n            filter: value\n        })\n    };\n\n    getFilteredClients = () => {\n        return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLocaleLowerCase()))\n    }\n    render() {\n        return (\n            \n            <>\n                <Section title=\"Phonebook\">\n                    \n                   \n                    <ContactsForm addContact={this.addContact} checkDublicateName={this.checkDublicateName} />\n                    \n                </Section>\n                \n                <Section title=\"Find contact by name\">\n                    <ContactsFilter filter={this.state.filter} setFilter={this.setFilter} />\n                </Section>\n                    \n                <Section title=\"Contacts\">\n                    <ContactsList contacts={this.state.contacts} onDeleteContact={this.onDeleteContact} contacts={this.getFilteredClients()}/>\n                </Section>\n               \n\n                </>\n\n        );\n    }\n}\n\nexport default Contacts;","import React from 'react'\nimport Contacts from './Contacts'\n\nconst App = () => {\n    return (\n        <>\n            <Contacts/>\n            </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <App />\n ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}